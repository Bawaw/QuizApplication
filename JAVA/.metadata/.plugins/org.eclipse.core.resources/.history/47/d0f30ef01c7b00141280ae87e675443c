package controller;

import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JTable;

import view.panels.CategoryDetailPanel;
import view.panels.CategoryOverviewPanel;
import view.panels.CategoryTableModel;
import domain.Category;
import domain.FacadeActionManager;
import domain.Feedback;

public class CategoryRemoveAction extends AbstractTestAction {
	private static final long serialVersionUID = 1L;
	private CategoryOverviewPanel overviewPanel;

	public CategoryRemoveAction(FacadeActionManager service) {
		super(service, "New");
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		getDetailPanel().setCategory(new Category());

		List<Category> categories = getService().getCategoryList();
		getDetailPanel().setCategories(categories);
		getDetailPanel().setFeedbacks(
				new ArrayList<Feedback>(getService().getFeedbackPool()
						.getAllStandardFeedbacks()));
		setPanelAsContentForView(getDetailPanel());
		
		JTable table = (JTable) (evt.getSource());
		CategoryTableModel tablem = (CategoryTableModel) (table.getModel());
		Category clickedCategory = (Category) tablem.getCategoryAt(table
				.getSelectedRow());
	}

	private CategoryOverviewPanel getDetailPanel() {
		return overviewPanel;
	}

	public void setDetailPanel(CategoryOverviewPanel detailPanel) {
		this.overviewPanel = overviewPanel;
	}
}
