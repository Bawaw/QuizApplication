package domain;

import java.util.ArrayList;
import java.util.Map.Entry;

public abstract class ScoreBehaviour {
	private Evaluation test;
	private final int SCOREON=20;
	
	public ScoreBehaviour(Evaluation test) throws DomainException {
		this.setTest(test);
	}

	public Evaluation getTest() {
		return test;
	}

	private void setTest(Evaluation test) throws DomainException {
		if(test==null){
			throw new DomainException("Test cannot be null");
		}
		this.test = test;
	}

	public int getScoreOn(){
		return this.SCOREON;
	}
	
	
	
	
	//we returnen enkel "ronde punten", dus niets na de komma
	public int calculateScore() {
		ArrayList<Entry<Exercise, Answer>> exercises=this.getTest().getExercises();
		int totalScore=0;
		int Userscore=0;
		
		
		for(Entry<Exercise, Answer> exerciseEntry: exercises){
			Answer answer=exerciseEntry.getValue();
			Exercise exercise=exerciseEntry.getKey();
			int score=exercise.getScore();
			totalScore+=score;
			//Indien vraag juist beantwoord: tel de score op.
			if(exercise.getQuestion().getRightAnswer().equals(answer)){
				Userscore+=score;
			}
		}
		
		int result=(Userscore/totalScore)*this.getScoreOn();
		
		return result;
	}

	
	public abstract int errorPenalty();
	
}
