package domain;

import java.util.ArrayList;

public abstract class Question {
	private String question;
	private ArrayList<Answer> options;
	private Answer rightAnswer;
	private int time;
	
	public Question(String question,Answer rightAnswer,ArrayList<Answer> option,int time) throws DomainException {
		this.setQuestion(question);
		this.setOptions(option);
		this.setRightAnswer(rightAnswer);
		this.setTime(time);
	}

	
	
	public String getQuestion() {
		return question;
	}

	private void setQuestion(String question) throws DomainException {
		if(question==null || question.equals("")){
			throw new DomainException("Invalid question!");
		}
		this.question = question;
	}

	public ArrayList<Answer> getOptions() {
		return options;
	}

	private void setOptions(ArrayList<Answer> options) {
		this.options = options;
	}

	public Answer getRightAnswer() {
		return rightAnswer;
	}

	
	private void setRightAnswer(Answer rightAnswer) throws DomainException {
		if(rightAnswer == null){
			throw new DomainException("Answer is null...");
		}
		if(!this.getOptions().contains(rightAnswer)){
			throw new DomainException("the rightAnswer is not included inside the options!");
		}
		
		this.rightAnswer = rightAnswer;
	}

	
	public int getTime() {
		return time;
	}

	private void setTime(int time) throws DomainException {
		if(time <= 0){
			throw new DomainException("time has to be positive!");
		}
		this.time = time;
	}
	
	@Override
	public boolean equals(Object o){
		boolean equals=false;
		if(o instanceof Question){
			Question q=(Question)o;
			equals=q.getQuestion().equals(this.getQuestion());
		}
		return equals;
	}
	

}
